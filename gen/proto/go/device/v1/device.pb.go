// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        (unknown)
// source: device/v1/device.proto

package devicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid           string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Pid            uint32 `protobuf:"varint,2,opt,name=pid,proto3" json:"pid,omitempty"`
	Memory         uint64 `protobuf:"varint,3,opt,name=memory,proto3" json:"memory,omitempty"`
	Cmdline        string `protobuf:"bytes,4,opt,name=cmdline,proto3" json:"cmdline,omitempty"`
	User           string `protobuf:"bytes,5,opt,name=user,proto3" json:"user,omitempty"`
	ContainerId    string `protobuf:"bytes,6,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	GpuUtilization uint32 `protobuf:"varint,10,opt,name=gpu_utilization,json=gpuUtilization,proto3" json:"gpu_utilization,omitempty"`
}

func (x *DeviceProcess) Reset() {
	*x = DeviceProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceProcess) ProtoMessage() {}

func (x *DeviceProcess) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceProcess.ProtoReflect.Descriptor instead.
func (*DeviceProcess) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{0}
}

func (x *DeviceProcess) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *DeviceProcess) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

func (x *DeviceProcess) GetMemory() uint64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *DeviceProcess) GetCmdline() string {
	if x != nil {
		return x.Cmdline
	}
	return ""
}

func (x *DeviceProcess) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DeviceProcess) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DeviceProcess) GetGpuUtilization() uint32 {
	if x != nil {
		return x.GpuUtilization
	}
	return 0
}

type ContainerDevice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device          *Device `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"`
	AllocatedShares int32   `protobuf:"varint,2,opt,name=allocated_shares,json=allocatedShares,proto3" json:"allocated_shares,omitempty"`
}

func (x *ContainerDevice) Reset() {
	*x = ContainerDevice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerDevice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerDevice) ProtoMessage() {}

func (x *ContainerDevice) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerDevice.ProtoReflect.Descriptor instead.
func (*ContainerDevice) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerDevice) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ContainerDevice) GetAllocatedShares() int32 {
	if x != nil {
		return x.AllocatedShares
	}
	return 0
}

type GpuContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContainerId      string             `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ContainerName    string             `protobuf:"bytes,2,opt,name=container_name,json=containerName,proto3" json:"container_name,omitempty"`
	PodId            string             `protobuf:"bytes,3,opt,name=pod_id,json=podId,proto3" json:"pod_id,omitempty"`
	PodNamespace     string             `protobuf:"bytes,4,opt,name=pod_namespace,json=podNamespace,proto3" json:"pod_namespace,omitempty"`
	MetagpuRequests  int64              `protobuf:"varint,5,opt,name=metagpu_requests,json=metagpuRequests,proto3" json:"metagpu_requests,omitempty"`
	MetagpuLimits    int64              `protobuf:"varint,6,opt,name=metagpu_limits,json=metagpuLimits,proto3" json:"metagpu_limits,omitempty"`
	ResourceName     string             `protobuf:"bytes,7,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	NodeName         string             `protobuf:"bytes,8,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	DeviceProcesses  []*DeviceProcess   `protobuf:"bytes,9,rep,name=device_processes,json=deviceProcesses,proto3" json:"device_processes,omitempty"`
	ContainerDevices []*ContainerDevice `protobuf:"bytes,10,rep,name=container_devices,json=containerDevices,proto3" json:"container_devices,omitempty"`
}

func (x *GpuContainer) Reset() {
	*x = GpuContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GpuContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GpuContainer) ProtoMessage() {}

func (x *GpuContainer) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GpuContainer.ProtoReflect.Descriptor instead.
func (*GpuContainer) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{2}
}

func (x *GpuContainer) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *GpuContainer) GetContainerName() string {
	if x != nil {
		return x.ContainerName
	}
	return ""
}

func (x *GpuContainer) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

func (x *GpuContainer) GetPodNamespace() string {
	if x != nil {
		return x.PodNamespace
	}
	return ""
}

func (x *GpuContainer) GetMetagpuRequests() int64 {
	if x != nil {
		return x.MetagpuRequests
	}
	return 0
}

func (x *GpuContainer) GetMetagpuLimits() int64 {
	if x != nil {
		return x.MetagpuLimits
	}
	return 0
}

func (x *GpuContainer) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *GpuContainer) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *GpuContainer) GetDeviceProcesses() []*DeviceProcess {
	if x != nil {
		return x.DeviceProcesses
	}
	return nil
}

func (x *GpuContainer) GetContainerDevices() []*ContainerDevice {
	if x != nil {
		return x.ContainerDevices
	}
	return nil
}

type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid              string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Index             uint32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Shares            uint32 `protobuf:"varint,3,opt,name=shares,proto3" json:"shares,omitempty"`
	GpuUtilization    uint32 `protobuf:"varint,4,opt,name=gpu_utilization,json=gpuUtilization,proto3" json:"gpu_utilization,omitempty"`
	MemoryUtilization uint32 `protobuf:"varint,5,opt,name=memory_utilization,json=memoryUtilization,proto3" json:"memory_utilization,omitempty"`
	MemoryTotal       uint64 `protobuf:"varint,6,opt,name=memory_total,json=memoryTotal,proto3" json:"memory_total,omitempty"`
	MemoryFree        uint64 `protobuf:"varint,7,opt,name=memory_free,json=memoryFree,proto3" json:"memory_free,omitempty"`
	MemoryUsed        uint64 `protobuf:"varint,8,opt,name=memory_used,json=memoryUsed,proto3" json:"memory_used,omitempty"`
	MemoryShareSize   uint64 `protobuf:"varint,9,opt,name=memory_share_size,json=memoryShareSize,proto3" json:"memory_share_size,omitempty"`
	ResourceName      string `protobuf:"bytes,10,opt,name=resource_name,json=resourceName,proto3" json:"resource_name,omitempty"`
	NodeName          string `protobuf:"bytes,11,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{3}
}

func (x *Device) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Device) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *Device) GetShares() uint32 {
	if x != nil {
		return x.Shares
	}
	return 0
}

func (x *Device) GetGpuUtilization() uint32 {
	if x != nil {
		return x.GpuUtilization
	}
	return 0
}

func (x *Device) GetMemoryUtilization() uint32 {
	if x != nil {
		return x.MemoryUtilization
	}
	return 0
}

func (x *Device) GetMemoryTotal() uint64 {
	if x != nil {
		return x.MemoryTotal
	}
	return 0
}

func (x *Device) GetMemoryFree() uint64 {
	if x != nil {
		return x.MemoryFree
	}
	return 0
}

func (x *Device) GetMemoryUsed() uint64 {
	if x != nil {
		return x.MemoryUsed
	}
	return 0
}

func (x *Device) GetMemoryShareSize() uint64 {
	if x != nil {
		return x.MemoryShareSize
	}
	return 0
}

func (x *Device) GetResourceName() string {
	if x != nil {
		return x.ResourceName
	}
	return ""
}

func (x *Device) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

type StreamGpuContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodId string `protobuf:"bytes,1,opt,name=pod_id,json=podId,proto3" json:"pod_id,omitempty"`
}

func (x *StreamGpuContainersRequest) Reset() {
	*x = StreamGpuContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamGpuContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamGpuContainersRequest) ProtoMessage() {}

func (x *StreamGpuContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamGpuContainersRequest.ProtoReflect.Descriptor instead.
func (*StreamGpuContainersRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{4}
}

func (x *StreamGpuContainersRequest) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

type StreamGpuContainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisibilityLevel string          `protobuf:"bytes,1,opt,name=visibility_level,json=visibilityLevel,proto3" json:"visibility_level,omitempty"`
	GpuContainers   []*GpuContainer `protobuf:"bytes,2,rep,name=gpu_containers,json=gpuContainers,proto3" json:"gpu_containers,omitempty"`
}

func (x *StreamGpuContainersResponse) Reset() {
	*x = StreamGpuContainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamGpuContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamGpuContainersResponse) ProtoMessage() {}

func (x *StreamGpuContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamGpuContainersResponse.ProtoReflect.Descriptor instead.
func (*StreamGpuContainersResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{5}
}

func (x *StreamGpuContainersResponse) GetVisibilityLevel() string {
	if x != nil {
		return x.VisibilityLevel
	}
	return ""
}

func (x *StreamGpuContainersResponse) GetGpuContainers() []*GpuContainer {
	if x != nil {
		return x.GpuContainers
	}
	return nil
}

type GetGpuContainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PodId string `protobuf:"bytes,1,opt,name=pod_id,json=podId,proto3" json:"pod_id,omitempty"`
}

func (x *GetGpuContainersRequest) Reset() {
	*x = GetGpuContainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGpuContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGpuContainersRequest) ProtoMessage() {}

func (x *GetGpuContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGpuContainersRequest.ProtoReflect.Descriptor instead.
func (*GetGpuContainersRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{6}
}

func (x *GetGpuContainersRequest) GetPodId() string {
	if x != nil {
		return x.PodId
	}
	return ""
}

type GetGpuContainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VisibilityLevel string          `protobuf:"bytes,1,opt,name=visibility_level,json=visibilityLevel,proto3" json:"visibility_level,omitempty"`
	GpuContainers   []*GpuContainer `protobuf:"bytes,2,rep,name=gpu_containers,json=gpuContainers,proto3" json:"gpu_containers,omitempty"`
}

func (x *GetGpuContainersResponse) Reset() {
	*x = GetGpuContainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGpuContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGpuContainersResponse) ProtoMessage() {}

func (x *GetGpuContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGpuContainersResponse.ProtoReflect.Descriptor instead.
func (*GetGpuContainersResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{7}
}

func (x *GetGpuContainersResponse) GetVisibilityLevel() string {
	if x != nil {
		return x.VisibilityLevel
	}
	return ""
}

func (x *GetGpuContainersResponse) GetGpuContainers() []*GpuContainer {
	if x != nil {
		return x.GpuContainers
	}
	return nil
}

type KillGpuProcessRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pid uint32 `protobuf:"varint,1,opt,name=pid,proto3" json:"pid,omitempty"`
}

func (x *KillGpuProcessRequest) Reset() {
	*x = KillGpuProcessRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillGpuProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillGpuProcessRequest) ProtoMessage() {}

func (x *KillGpuProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillGpuProcessRequest.ProtoReflect.Descriptor instead.
func (*KillGpuProcessRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{8}
}

func (x *KillGpuProcessRequest) GetPid() uint32 {
	if x != nil {
		return x.Pid
	}
	return 0
}

type KillGpuProcessResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *KillGpuProcessResponse) Reset() {
	*x = KillGpuProcessResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KillGpuProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillGpuProcessResponse) ProtoMessage() {}

func (x *KillGpuProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillGpuProcessResponse.ProtoReflect.Descriptor instead.
func (*KillGpuProcessResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{9}
}

type PatchConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MetaGpus int32 `protobuf:"varint,1,opt,name=meta_gpus,json=metaGpus,proto3" json:"meta_gpus,omitempty"`
}

func (x *PatchConfigsRequest) Reset() {
	*x = PatchConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchConfigsRequest) ProtoMessage() {}

func (x *PatchConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchConfigsRequest.ProtoReflect.Descriptor instead.
func (*PatchConfigsRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{10}
}

func (x *PatchConfigsRequest) GetMetaGpus() int32 {
	if x != nil {
		return x.MetaGpus
	}
	return 0
}

type PatchConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PatchConfigsResponse) Reset() {
	*x = PatchConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchConfigsResponse) ProtoMessage() {}

func (x *PatchConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchConfigsResponse.ProtoReflect.Descriptor instead.
func (*PatchConfigsResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{11}
}

type GetDevicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetDevicesRequest) Reset() {
	*x = GetDevicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesRequest) ProtoMessage() {}

func (x *GetDevicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesRequest.ProtoReflect.Descriptor instead.
func (*GetDevicesRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{12}
}

type GetDevicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Device map[string]*Device `protobuf:"bytes,1,rep,name=device,proto3" json:"device,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetDevicesResponse) Reset() {
	*x = GetDevicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDevicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDevicesResponse) ProtoMessage() {}

func (x *GetDevicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDevicesResponse.ProtoReflect.Descriptor instead.
func (*GetDevicesResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{13}
}

func (x *GetDevicesResponse) GetDevice() map[string]*Device {
	if x != nil {
		return x.Device
	}
	return nil
}

type GetMetaDeviceInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetMetaDeviceInfoRequest) Reset() {
	*x = GetMetaDeviceInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetaDeviceInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaDeviceInfoRequest) ProtoMessage() {}

func (x *GetMetaDeviceInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaDeviceInfoRequest.ProtoReflect.Descriptor instead.
func (*GetMetaDeviceInfoRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{14}
}

type GetMetaDeviceInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node     string            `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Devices  []*Device         `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty"`
}

func (x *GetMetaDeviceInfoResponse) Reset() {
	*x = GetMetaDeviceInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMetaDeviceInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMetaDeviceInfoResponse) ProtoMessage() {}

func (x *GetMetaDeviceInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMetaDeviceInfoResponse.ProtoReflect.Descriptor instead.
func (*GetMetaDeviceInfoResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{15}
}

func (x *GetMetaDeviceInfoResponse) GetNode() string {
	if x != nil {
		return x.Node
	}
	return ""
}

func (x *GetMetaDeviceInfoResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *GetMetaDeviceInfoResponse) GetDevices() []*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

type PingServerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingServerRequest) Reset() {
	*x = PingServerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingServerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingServerRequest) ProtoMessage() {}

func (x *PingServerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingServerRequest.ProtoReflect.Descriptor instead.
func (*PingServerRequest) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{16}
}

type PingServerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingServerResponse) Reset() {
	*x = PingServerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_device_v1_device_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingServerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingServerResponse) ProtoMessage() {}

func (x *PingServerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_device_v1_device_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingServerResponse.ProtoReflect.Descriptor instead.
func (*PingServerResponse) Descriptor() ([]byte, []int) {
	return file_device_v1_device_proto_rawDescGZIP(), []int{17}
}

var File_device_v1_device_proto protoreflect.FileDescriptor

var file_device_v1_device_proto_rawDesc = []byte{
	0x0a, 0x16, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6d, 0x64, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x67, 0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x67,
	0x70, 0x75, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x67, 0x0a,
	0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x29, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x61,
	0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x65, 0x64,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x22, 0xb6, 0x03, 0x0a, 0x0c, 0x47, 0x70, 0x75, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x6f, 0x64, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x29, 0x0a,
	0x10, 0x6d, 0x65, 0x74, 0x61, 0x67, 0x70, 0x75, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6d, 0x65, 0x74, 0x61, 0x67, 0x70, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x74, 0x61,
	0x67, 0x70, 0x75, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x6d, 0x65, 0x74, 0x61, 0x67, 0x70, 0x75, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x43, 0x0a, 0x10, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x0f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50, 0x72, 0x6f,
	0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x47, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52, 0x10, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0xf5, 0x02, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f,
	0x67, 0x70, 0x75, 0x5f, 0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x67, 0x70, 0x75, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f,
	0x75, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x74, 0x69, 0x6c, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f, 0x72,
	0x79, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d, 0x65,
	0x6d, 0x6f, 0x72, 0x79, 0x46, 0x72, 0x65, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x6f,
	0x72, 0x79, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6d,
	0x65, 0x6d, 0x6f, 0x72, 0x79, 0x55, 0x73, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x33, 0x0a, 0x1a, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x47, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a,
	0x1b, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69,
	0x74, 0x79, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3e, 0x0a, 0x0e, 0x67, 0x70, 0x75, 0x5f, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0d, 0x67, 0x70, 0x75, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x30, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x47, 0x70,
	0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x70, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x70, 0x6f, 0x64, 0x49, 0x64, 0x22, 0x85, 0x01, 0x0a, 0x18, 0x47, 0x65,
	0x74, 0x47, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x3e, 0x0a, 0x0e, 0x67, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x52, 0x0d, 0x67, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x22, 0x29, 0x0a, 0x15, 0x4b, 0x69, 0x6c, 0x6c, 0x47, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x70, 0x69, 0x64, 0x22, 0x18, 0x0a, 0x16,
	0x4b, 0x69, 0x6c, 0x6c, 0x47, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x32, 0x0a, 0x13, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x67, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x47, 0x70, 0x75, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41,
	0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x1a, 0x4c, 0x0a, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xe9, 0x01, 0x0a, 0x19,
	0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x4e, 0x0a,
	0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x32, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d,
	0x65, 0x74, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a,
	0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x13, 0x0a, 0x11, 0x50, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12,
	0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x32, 0x80, 0x05, 0x0a, 0x0d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x5d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x47, 0x70, 0x75, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x70, 0x75, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x13, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x70, 0x75,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x47, 0x70, 0x75,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x47, 0x70, 0x75, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x4b, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x57, 0x0a, 0x0e, 0x4b, 0x69,
	0x6c, 0x6c, 0x47, 0x70, 0x75, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x20, 0x2e, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x47, 0x70, 0x75,
	0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21,
	0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4b, 0x69, 0x6c, 0x6c, 0x47,
	0x70, 0x75, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x73, 0x12, 0x1e, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x61, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x60, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x0a, 0x50, 0x69, 0x6e, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0xb2, 0x01, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x2e, 0x64, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x48, 0x02, 0x50, 0x01, 0x5a, 0x4d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x41,
	0x49, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x67, 0x70, 0x75, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x2d, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x44, 0x58, 0x58, 0xaa, 0x02, 0x09,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x56, 0x31, 0xca, 0x02, 0x09, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x15, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5c, 0x56,
	0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_device_v1_device_proto_rawDescOnce sync.Once
	file_device_v1_device_proto_rawDescData = file_device_v1_device_proto_rawDesc
)

func file_device_v1_device_proto_rawDescGZIP() []byte {
	file_device_v1_device_proto_rawDescOnce.Do(func() {
		file_device_v1_device_proto_rawDescData = protoimpl.X.CompressGZIP(file_device_v1_device_proto_rawDescData)
	})
	return file_device_v1_device_proto_rawDescData
}

var file_device_v1_device_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_device_v1_device_proto_goTypes = []interface{}{
	(*DeviceProcess)(nil),               // 0: device.v1.DeviceProcess
	(*ContainerDevice)(nil),             // 1: device.v1.ContainerDevice
	(*GpuContainer)(nil),                // 2: device.v1.GpuContainer
	(*Device)(nil),                      // 3: device.v1.Device
	(*StreamGpuContainersRequest)(nil),  // 4: device.v1.StreamGpuContainersRequest
	(*StreamGpuContainersResponse)(nil), // 5: device.v1.StreamGpuContainersResponse
	(*GetGpuContainersRequest)(nil),     // 6: device.v1.GetGpuContainersRequest
	(*GetGpuContainersResponse)(nil),    // 7: device.v1.GetGpuContainersResponse
	(*KillGpuProcessRequest)(nil),       // 8: device.v1.KillGpuProcessRequest
	(*KillGpuProcessResponse)(nil),      // 9: device.v1.KillGpuProcessResponse
	(*PatchConfigsRequest)(nil),         // 10: device.v1.PatchConfigsRequest
	(*PatchConfigsResponse)(nil),        // 11: device.v1.PatchConfigsResponse
	(*GetDevicesRequest)(nil),           // 12: device.v1.GetDevicesRequest
	(*GetDevicesResponse)(nil),          // 13: device.v1.GetDevicesResponse
	(*GetMetaDeviceInfoRequest)(nil),    // 14: device.v1.GetMetaDeviceInfoRequest
	(*GetMetaDeviceInfoResponse)(nil),   // 15: device.v1.GetMetaDeviceInfoResponse
	(*PingServerRequest)(nil),           // 16: device.v1.PingServerRequest
	(*PingServerResponse)(nil),          // 17: device.v1.PingServerResponse
	nil,                                 // 18: device.v1.GetDevicesResponse.DeviceEntry
	nil,                                 // 19: device.v1.GetMetaDeviceInfoResponse.MetadataEntry
}
var file_device_v1_device_proto_depIdxs = []int32{
	3,  // 0: device.v1.ContainerDevice.device:type_name -> device.v1.Device
	0,  // 1: device.v1.GpuContainer.device_processes:type_name -> device.v1.DeviceProcess
	1,  // 2: device.v1.GpuContainer.container_devices:type_name -> device.v1.ContainerDevice
	2,  // 3: device.v1.StreamGpuContainersResponse.gpu_containers:type_name -> device.v1.GpuContainer
	2,  // 4: device.v1.GetGpuContainersResponse.gpu_containers:type_name -> device.v1.GpuContainer
	18, // 5: device.v1.GetDevicesResponse.device:type_name -> device.v1.GetDevicesResponse.DeviceEntry
	19, // 6: device.v1.GetMetaDeviceInfoResponse.metadata:type_name -> device.v1.GetMetaDeviceInfoResponse.MetadataEntry
	3,  // 7: device.v1.GetMetaDeviceInfoResponse.devices:type_name -> device.v1.Device
	3,  // 8: device.v1.GetDevicesResponse.DeviceEntry.value:type_name -> device.v1.Device
	6,  // 9: device.v1.DeviceService.GetGpuContainers:input_type -> device.v1.GetGpuContainersRequest
	4,  // 10: device.v1.DeviceService.StreamGpuContainers:input_type -> device.v1.StreamGpuContainersRequest
	12, // 11: device.v1.DeviceService.GetDevices:input_type -> device.v1.GetDevicesRequest
	8,  // 12: device.v1.DeviceService.KillGpuProcess:input_type -> device.v1.KillGpuProcessRequest
	10, // 13: device.v1.DeviceService.PatchConfigs:input_type -> device.v1.PatchConfigsRequest
	14, // 14: device.v1.DeviceService.GetMetaDeviceInfo:input_type -> device.v1.GetMetaDeviceInfoRequest
	16, // 15: device.v1.DeviceService.PingServer:input_type -> device.v1.PingServerRequest
	7,  // 16: device.v1.DeviceService.GetGpuContainers:output_type -> device.v1.GetGpuContainersResponse
	5,  // 17: device.v1.DeviceService.StreamGpuContainers:output_type -> device.v1.StreamGpuContainersResponse
	13, // 18: device.v1.DeviceService.GetDevices:output_type -> device.v1.GetDevicesResponse
	9,  // 19: device.v1.DeviceService.KillGpuProcess:output_type -> device.v1.KillGpuProcessResponse
	11, // 20: device.v1.DeviceService.PatchConfigs:output_type -> device.v1.PatchConfigsResponse
	15, // 21: device.v1.DeviceService.GetMetaDeviceInfo:output_type -> device.v1.GetMetaDeviceInfoResponse
	17, // 22: device.v1.DeviceService.PingServer:output_type -> device.v1.PingServerResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_device_v1_device_proto_init() }
func file_device_v1_device_proto_init() {
	if File_device_v1_device_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_device_v1_device_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerDevice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GpuContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamGpuContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamGpuContainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGpuContainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGpuContainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillGpuProcessRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KillGpuProcessResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDevicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetaDeviceInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMetaDeviceInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingServerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_device_v1_device_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingServerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_device_v1_device_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_device_v1_device_proto_goTypes,
		DependencyIndexes: file_device_v1_device_proto_depIdxs,
		MessageInfos:      file_device_v1_device_proto_msgTypes,
	}.Build()
	File_device_v1_device_proto = out.File
	file_device_v1_device_proto_rawDesc = nil
	file_device_v1_device_proto_goTypes = nil
	file_device_v1_device_proto_depIdxs = nil
}
